{
    "interface": true,
    "class": "EngagementInterface",
    "version": 3,
    "actions": {
        "getAll": {
            "path": "objects/tasks",
            "method": "GET",
            "description": "Read a page of tasks. Control what is returned via the properties query param."
        },
        "get": {
            "path": "objects/tasks/{taskId}",
            "method": "GET",
            "description": "Read an note identified by {taskId}."
        },
        "create": {
            "path": "objects/tasks",
            "method": "POST",
            "description": "Create a note with the given properties and return a copy of the object, including the ID."
        },
        "update": {
            "path": "objects/tasks/{taskId}",
            "method": "PATCH",
            "description": "Perform a partial update of an note identified by {taskId}."
        },
        "delete": {
            "path": "objects/tasks/{taskId}",
            "method": "DELETE",
            "description": "Move an note identified by {taskId} to the recycling bin."
        },
        "getAssociations": {
            "path": "objects/tasks/{taskId}/associations/{toObjectType}",
            "method": "GET",
            "description": "List associations of a note by type."
        },
        "createAssociation": {
            "path": "objects/tasks/{taskId}/associations/{toObjectType}/{toObjectId}/{associationType}",
            "method": "PUT",
            "hasBody": false,
            "description": "Associate a note with another object."
        },
        "removeAssociation": {
            "path": "objects/tasks/{taskId}/associations/{toObjectType}/{toObjectId}/{associationType}",
            "method": "DELETE",
            "description": "Remove an association between ticket and an object."
        },
        "batchDelete": {
            "path": "objects/tasks/batch/archive",
            "method": "POST",
            "description": "Archive a batch of tasks by ID."
        },
        "batchCreate": {
            "path": "objects/tasks/batch/create",
            "method": "POST",
            "description": "Create a batch of tasks."
        },
        "batchRead": {
            "path": "objects/tasks/batch/read",
            "method": "POST",
            "description": "Read a batch of tasks by internal ID, or unique property values."
        },
        "batchUpdate": {
            "path": "objects/tasks/batch/update",
            "method": "POST",
            "description": "Update a batch of tasks."
        },
        "search": {
            "path": "objects/tasks/search",
            "method": "POST",
            "description": "Search tasks."
        },
        "merge": {
            "path": "objects/tasks/merge",
            "method": "POST",
            "description": "Merge two tasks with same type"
        },
        "createOrUpdate": {
            "handler": "create_or_update",
            "description": "(Handler) Use Create or Update yask if id exists."
        },
        "importAll": {
            "handler": "import_all",
            "description": "(Handler) Import All Deals using offset and getAll"
        }
    }
}