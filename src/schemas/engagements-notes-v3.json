{
    "resource": "crm",
    "class": "EngagementNoteHubspot",
    "documentation": "https://app.hubspot.com/developer-docs/api?spec=v1/apis/crm/v3/objects/notes",
    "version": 3,
    "latest": true,
    "interfaceClass": "EngagementInterface",
    "defaultProperties": [
        "hs_timestamp",
        "hs_note_body",
        "hubspot_owner_id",
        "hs_attachment_ids"
    ],
    "actions": {
        "getAll": {
            "path": "objects/notes",
            "method": "GET",
            "description": "Read a page of notes. Control what is returned via the properties query param.",
            "iteratorIndex": "results",
            "afterIndex": "paging.next.after",
            "withDefaultProperties": true
        },
        "get": {
            "path": "objects/notes/{noteId}",
            "method": "GET",
            "description": "Read an note identified by {noteId}.",
            "withDefaultProperties": true
        },
        "create": {
            "path": "objects/notes",
            "method": "POST",
            "bodyBuilder": "HubspotCrmCreateBody",
            "description": "Create a note with the given properties and return a copy of the object, including the ID."
        },
        "update": {
            "path": "objects/notes/{noteId}",
            "method": "PATCH",
            "bodyBuilder": "HubspotCrmUpdateBody",
            "description": "Perform a partial update of an note identified by {noteId}."
        },
        "delete": {
            "path": "objects/notes/{noteId}",
            "method": "DELETE",
            "description": "Move an note identified by {noteId} to the recycling bin."
        },
        "getAssociations": {
            "path": "objects/notes/{noteId}/associations/{toObjectType}",
            "method": "GET",
            "description": "List associations of a note by type.",
            "iteratorIndex": "results",
            "afterIndex": "paging.next.after"
        },
        "createAssociation": {
            "path": "objects/notes/{noteId}/associations/{toObjectType}/{toObjectId}/{associationType}",
            "method": "PUT",
            "hasBody": false,
            "description": "Associate a note with another object."
        },
        "removeAssociation": {
            "path": "objects/notes/{noteId}/associations/{toObjectType}/{toObjectId}/{associationType}",
            "method": "DELETE",
            "description": "Remove an association between ticket and an object."
        },
        "batchDelete": {
            "path": "objects/notes/batch/archive",
            "method": "POST",
            "bodyBuilder": "HubspotBatchDeleteBody",
            "description": "Archive a batch of notes by ID."
        },
        "batchCreate": {
            "path": "objects/notes/batch/create",
            "method": "POST",
            "bodyBuilder": "HubspotBatchCreateBody",
            "description": "Create a batch of notes.",
            "iteratorIndex": "results",
            "afterIndex": null
        },
        "batchRead": {
            "path": "objects/notes/batch/read",
            "method": "POST",
            "bodyBuilder": "HubspotBatchReadBody",
            "description": "Read a batch of notes by internal ID, or unique property values.",
            "iteratorIndex": "results",
            "afterIndex": null
        },
        "batchUpdate": {
            "path": "objects/notes/batch/update",
            "method": "POST",
            "bodyBuilder": "HubspotBatchUpdateBody",
            "description": "Update a batch of notes.",
            "iteratorIndex": "results",
            "afterIndex": null
        },
        "search": {
            "path": "objects/notes/search",
            "method": "POST",
            "bodyBuilder": "HubspotSearchBody",
            "description": "Search notes.",
            "iteratorIndex": "results",
            "afterIndex": "paging.next.after"
        },
        "merge": {
            "path": "objects/notes/merge",
            "method": "POST",
            "description": "Merge two notes with same type"
        },
        "createOrUpdate": {
            "handler": "create_or_update",
            "description": "(Handler) Use Create or Update note if id exists."
        },
        "importAll": {
            "handler": "import_all",
            "description": "(Handler) Import All Deals using offset and getAll"
        }
    }
}