#!/usr/bin/env php
<?php

$dir = __DIR__.'/vendor';

if (!file_exists($dir.'/autoload.php')) {
    $dir = __DIR__.'/../vendor';
}

if (!file_exists($dir.'/autoload.php')) {
    $dir = __DIR__.'/../../vendor';
}

if (!file_exists($dir.'/autoload.php')) {
    echo 'Autoload not found.';

    exit(1);
}

require $dir.'/autoload.php';


$template = file_get_contents(__ROOT__ . '/src/stubs/resource.stub');

$files = glob(__ROOT__ .'/src/schemas/*.json');

$resources = array_map(function ($path) {
    preg_match('/schemas\/(.*?)\.json/', $path, $match);
   
    return $match[1];
}, $files);

$methodsWithBody = [
    'PUT',
    'PATCH',
    'POST'
];

$methods = [
    'PUT',
    'PATCH',
    'POST',
    'GET',
    'DELETE'
];
$i = $j = 0;
foreach ($resources as $resource) {
    $i++;
    $j = 0;
    $document = json_decode(file_get_contents(__ROOT__ . "/src/schemas/{$resource}.json"));

    $documentation = @$document->documentation;

    $content = $template;
    $content = str_replace('{{class}}', $document->class, $content);
    $content = str_replace('{{name}}', $resource, $content);
    $doc = '';

    if ($documentation) {
        $doc .= " * @link {$documentation}\n *\n";
    }
    
    foreach ($document->actions as $action => $actionDefinition) {
        $j++;

        if (!in_array($actionDefinition->method, $methods)) {
            dd("{$actionDefinition->method} not Allowed in {$resource}!");
        }

        preg_match_all('/\{(.*?)\}/', $actionDefinition->path, $matches);

        $params = array_map(function ($item) {
            return 'int|string $'. $item;
        }, $matches[1]);

        if (in_array($actionDefinition->method, $methodsWithBody)) {
            $params[] = 'array $requestBody';
        }
 
        $params = implode(', ', $params);
        
        $methodDocumentation = @$actionDefinition->documentation ?? $documentation;

        $description = @$actionDefinition->description;
    
        $doc .= " * @method static \$this {$action}({$params}) {$description}\n";

        if ($methodDocumentation) {
            $doc .= " * See {$methodDocumentation}\n";
        }
        $doc .= " *\n";

        $doc .= " * @method \$this {$action}({$params}) {$description}\n";

        if ($methodDocumentation) {
            $doc .= " * See {$methodDocumentation}\n";
        }
        $doc .= " *\n";
    }

    $content = str_replace('{{docs}}', $doc, $content);

    file_put_contents(__ROOT__ ."/src/Resources/{$document->class}.php", $content);

    dump("{$i} - {$resource} created! - {$j} actions!");
}
